// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package protobuf

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// WaybillCenterClient is the client API for WaybillCenter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WaybillCenterClient interface {
	// 获取运单信息
	ListWaybill(ctx context.Context, in *ListWaybillReq, opts ...grpc.CallOption) (*ListWaybillRes, error)
}

type waybillCenterClient struct {
	cc grpc.ClientConnInterface
}

func NewWaybillCenterClient(cc grpc.ClientConnInterface) WaybillCenterClient {
	return &waybillCenterClient{cc}
}

func (c *waybillCenterClient) ListWaybill(ctx context.Context, in *ListWaybillReq, opts ...grpc.CallOption) (*ListWaybillRes, error) {
	out := new(ListWaybillRes)
	err := c.cc.Invoke(ctx, "/protobuf.WaybillCenter/ListWaybill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WaybillCenterServer is the server API for WaybillCenter service.
// All implementations must embed UnimplementedWaybillCenterServer
// for forward compatibility
type WaybillCenterServer interface {
	// 获取运单信息
	ListWaybill(context.Context, *ListWaybillReq) (*ListWaybillRes, error)
	mustEmbedUnimplementedWaybillCenterServer()
}

// UnimplementedWaybillCenterServer must be embedded to have forward compatible implementations.
type UnimplementedWaybillCenterServer struct {
}

func (UnimplementedWaybillCenterServer) ListWaybill(context.Context, *ListWaybillReq) (*ListWaybillRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWaybill not implemented")
}
func (UnimplementedWaybillCenterServer) mustEmbedUnimplementedWaybillCenterServer() {}

// UnsafeWaybillCenterServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to WaybillCenterServer will
// result in compilation errors.
type UnsafeWaybillCenterServer interface {
	mustEmbedUnimplementedWaybillCenterServer()
}

func RegisterWaybillCenterServer(s grpc.ServiceRegistrar, srv WaybillCenterServer) {
	s.RegisterService(&WaybillCenter_ServiceDesc, srv)
}

func _WaybillCenter_ListWaybill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWaybillReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaybillCenterServer).ListWaybill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.WaybillCenter/ListWaybill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaybillCenterServer).ListWaybill(ctx, req.(*ListWaybillReq))
	}
	return interceptor(ctx, in, info, handler)
}

// WaybillCenter_ServiceDesc is the grpc.ServiceDesc for WaybillCenter service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var WaybillCenter_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.WaybillCenter",
	HandlerType: (*WaybillCenterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListWaybill",
			Handler:    _WaybillCenter_ListWaybill_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "waybill_center.proto",
}
